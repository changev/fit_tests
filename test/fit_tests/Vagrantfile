######################
# Vagrant File Start #
######################

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    # RackHD SERVER (RackHD installed and running)
    config.vm.define "dev" do |target|
        target.vm.box = "bento/ubuntu-16.04"
        target.vm.box_download_insecure = true
        target.vm.provider "virtualbox" do |v|
            v.memory = 4096
            v.cpus = 4
            v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all", "--ioapic", "on"]
        end
        target.ssh.username = "vagrant"
        target.ssh.password = "vagrant"

        target.vm.network "private_network", ip: "172.31.128.1", virtualbox__intnet: "closednet"
        target.vm.network "forwarded_port", guest: 8080, host: 9090
        target.vm.network "forwarded_port", guest: 5672, host: 9091
        target.vm.network "forwarded_port", guest: 9080, host: 9092
        target.vm.network "forwarded_port", guest: 8443, host: 9093

        target.ssh.forward_agent = true

        target.vm.provision "shell", inline: <<-SHELL
            git clone https://github.com/onrack2/fit_tests fit_tests
            sudo apt-get -y install python-pip
            sudo apt-get -y install virtualenv
            virtualenv .venv
            source .venv/bin/activate
            pip install -r fit_tests/requirements.txt
            cd fit_tests/test/fit_tests
            python run_tests.py -test deploy/rackhd_source_install.py
        SHELL
    end

    # RackHD SERVER TEMPLATE (RackHD not installed)
    config.vm.define "template" do |target|
        target.vm.box = "bento/ubuntu-16.04"
        target.vm.provider "virtualbox" do |v|
            v.memory = 4096
            v.cpus = 4
            v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all", "--ioapic", "on"]
        end
        target.ssh.username = "vagrant"
        target.ssh.password = "vagrant"
        target.vm.network "private_network", ip: "172.31.128.1", virtualbox__intnet: "closednet"
        target.vm.network "forwarded_port", guest: 8080, host: 9090
        target.vm.network "forwarded_port", guest: 5672, host: 9091
        target.vm.network "forwarded_port", guest: 9080, host: 9092
        target.vm.network "forwarded_port", guest: 8443, host: 9093
        target.ssh.forward_agent = true
        target.vm.provision "shell", inline: <<-SHELL
            git clone https://github.com/onrack2/fit_tests fit_tests
        SHELL
    end

    # Virtual HW SERVER
    config.vm.define "quanta_d51" do |target|
        target.vm.box = "InfraSIM/quanta_d51"
        target.vm.box_download_insecure = true
        target.vm.provider "virtualbox" do |v|
            v.gui = true
            v.memory = 4096
            v.cpus = 4
            v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all", "--ioapic", "on"]
        end
        #target.vm.network :public_network
        target.vm.network "private_network", virtualbox__intnet: "254", auto_config: false, nic_type: "82540EM"
        target.vm.provision "shell", inline: <<-SHELL
            sudo ifconfig eth1 up
            sleep 2
            sudo udhcpc -i br1
        SHELL
    end

end
